в первой версии я смотрел как примерно будет работать программа голосования. в ней реализовано получение голоса от пользователя, увеличение количества голосов у выбора, создание пользователя и создание выбора.
я решил использовать для идентификации простой вход в свой аккаунт через login и все.
а вся информация хранится в базе данных h2 (пока что) в двух таблицах:
первая users имеет id, login и choice(который сначала = 0) нужна для регистрации пользователя.
вторая таблица votes имеет id, name count (который увеличивается на 1 при каждом выборе этой сущности в choice у user)

связь у таблиц OneToMany тк у одного выбора может быть множество пользователей, где я и связал модель user с vote 
то же самое и с другой моделью vote

создал два репозитория для работы как с users, так и с votes.

создал три service
1 - для работы с пользователем(создание его, обновление, удаление)
2 - для работы с выбором(создание его, обновление, удаление)
3 - для реализации выбора, где сначала проверяется может ли пользователь выбирать, дальше увеличиваем count у выбронного им на 1, и к choice присваиваем его выбор

создал 2 контроллера
1 для создание и работы с пользователем(реализация всех тех методов для пользователя что в сервисе)
2 для создания и работы с vote и выполнение команды голосования
